"use client";

import CtaButton from "@/components/Ui/CtaButton";
import React, { useEffect, useState } from "react";
import SetupContent from "@/components/Ui/SetupContent";
import { useRouter } from "next/navigation";
import axios from "axios";
import { useLiff } from "@/components/provider/LiffProvider";
import toast from "react-hot-toast";
import { useCreateGoal } from "@/hooks/useUser";
import UserInputMonthly from "@/components/pages/UserInputMonthly";
import Loading from "@/components/Loading";
import ProductTabs from "@/components/welcomeComponents/ProductTabs";
import GoalSetter from "@/components/Ui/GoalSetter";

// GET https://checkuserdb.vercel.app/api/check-user/:liffID ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
// 1. Check ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏Å‡∏±‡∏ö database ‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏´‡∏°
// 2. ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Goal ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢
// 3. ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡πâ redirect ‡πÑ‡∏õ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏ó‡∏µ‡πà https://liff.line.me/2006703040-RYAyYAyA

export default function Page() {
  // const { liffProfile } = useLiff();
  const [liffProfile, setLiffProfile] = useState({
    userId: "U5d2998909721fdea596f8e9e91e7bf85",
    displayName: "LongüëÅÔ∏è‚Äçüó®Ô∏è",
    pictureUrl:
      "https://profile.line-scdn.net/0hPsTqIBJhD1x5CB7EtsVxYglYDDZaeVZOVjxHahgOUGhMPU9ZVDxIORwJAj5BOhxZAWxBakoIV21bTUB3DWgHYz9BU24mUxsKPhhEezdwJwJNQTdDFRZGXRB2BRAsbhxKUDFHXDVTUDIMbD5jU2oBcTpMFWpFQCxrN19jCnw6Yd8WCngJVG9EPUQAVmrA",
  });
  const router = useRouter();
  const [goal, setGoal] = useState({});
  const [uiStep, setUiStep] = useState("input");
  const [monthlyPayment, setMonthlyPayment] = useState("");
  const [suggestedPhone, setSuggestedPhone] = useState(null);
  const { mutate: createGoalMutate, isPending: createGoalPending } = useCreateGoal();

  const handleGoalUpdate = (newGoal) => {
    setGoal((prev) => ({ ...prev, mobileId: newGoal.mobileId, planId: newGoal.planId }));
    console.log(goal);
  };

  const handleSetGoal = () => {
    console.log(goal);
    if (!goal.mobileId || !goal.planId) {
      toast.error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏°‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô");
    }
    const { userId: liffId, displayName, pictureUrl } = liffProfile;
    const { mobileId, planId } = goal;
    // console.log({ liffId, displayName, pictureUrl, mobileId, planId });
    createGoalMutate({ liffId, displayName, pictureUrl, mobileId, planId });
  };

  const handleUserRedirect = async (userId) => {
    try {
      // const response = await axios.get(`https://checkuserdb.vercel.app/api/check-user/${userId} `);
      // if (response) toast.success("‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏°‡∏î‡∏≤‡∏ß‡∏ô‡πå!");
    } catch (error) {
      console.log("new user: ", error.status === 404);
      // router.replace("https://liff.line.me/2006703040-RYAyYAyA");
    }
  };

  const handleCalculateClick = async () => {
    if (!monthlyPayment || monthlyPayment < 500) {
      toast.error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô: ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥ 500 ‡∏ö‡∏≤‡∏ó");
      return;
    }

    const potentialPrice = monthlyPayment * 6;
    const phones = await axios.get(`http://localhost:4000/v1/product?maxPrice=${potentialPrice}`);
    const { data } = phones;
    console.log(data);
    setSuggestedPhone(data);
    console.log("Converted: ", suggestedPhone);
    setUiStep("calculate");
  };

  console.log("GOAL FROM WELCOME PAGE: ", goal);

  useEffect(() => {
    handleUserRedirect(liffProfile?.userId);
  }, [liffProfile]);

  useEffect(() => {
    if (uiStep === "calculate") setTimeout(() => setUiStep("main"), 4000);
  }, [uiStep]);

  console.log(goal);

  return (
    <main id="setup-page" className="flex min-h-dvh flex-col overflow-x-hidden bg-white">
      {uiStep === "input" && (
        <UserInputMonthly
          isOpen={uiStep === "input" ? true : false}
          monthlyPayment={monthlyPayment}
          setMonthlyPayment={setMonthlyPayment}
          onCalculate={handleCalculateClick}
        />
      )}

      {uiStep === "calculate" && <Loading message={"‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•..."} />}
      {uiStep === "main" && suggestedPhone && (
        <div className="flex flex-col gap-4">
          <header className="from-primary-pink to-primary-orange flex flex-col items-center justify-center gap-2 rounded-b-4xl bg-gradient-to-br p-6 pt-14 text-white drop-shadow-lg">
            <h1 className="text-2xl font-bold text-white drop-shadow-md drop-shadow-black/30">
              ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏°
            </h1>
            <p className="text-xs">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ ‡πÅ‡∏•‡πâ‡∏ß‡∏°‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏°‡∏Å‡∏±‡∏ô!</p>
          </header>

          {/* <SetupContent goal={goal} setGoal={setGoal} /> */}
          {/* <ProductTabs products={suggestedPhone} /> */}
          <GoalSetter products={suggestedPhone} onGoalChange={handleGoalUpdate} />

          <footer className="flex w-full items-center justify-center bg-white p-6 pb-12 shadow-[0_-5px_20px_rgba(0,0,0,0.05)]">
            <CtaButton
              onClick={handleSetGoal}
              disabled={createGoalPending}
              className={"z-10 w-48 rounded-xl p-4 text-lg font-bold"}
            >
              {createGoalPending ? "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å..." : "‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏°"}
            </CtaButton>
          </footer>
        </div>
      )}
    </main>
  );
}
